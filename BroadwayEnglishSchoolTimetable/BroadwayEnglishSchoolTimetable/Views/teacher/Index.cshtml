@model IEnumerable<BroadwayEnglishSchoolTimetable.Models.teacherPL>

@{
    ViewBag.Title = "Список преподователей";
}

<h2>Список преподователей</h2>

<form class="form-inline" method="get">
    <div class="form-group">
        @Html.DisplayNameFor(model => model.SurNameSearch): &nbsp;
        @Html.TextBox("surnameS", @ViewBag.surnameS as string, htmlAttributes: new { @class = "form-control" }) &nbsp;
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(model => model.NameSearch): &nbsp;
        @Html.TextBox("nameS", @ViewBag.nameS as string, htmlAttributes: new { @class = "form-control" }) &nbsp;
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(model => model.levelEnglish): &nbsp;
        @Html.DropDownList("levelName", @ViewBag.levelName as SelectList, htmlAttributes: new { @class = "form-control" }) &nbsp;
    </div>
    <div class="form-group">
        @Html.DisplayNameFor(model => model.inStaff) &nbsp;
        @Html.CheckBox("inStaff", (bool)@ViewBag.inStaff)&nbsp;
    </div>

    <div class="form-group">
        <input type="submit" value="Filter" class="btn btn-default" />
    </div>
</form>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.surname).ToString(), "Index", new { sortOrder = @ViewBag.SurnameSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.name).ToString(), "Index", new { sortOrder = @ViewBag.NameSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th class="hidden-xs hidden-sm hidden-md">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.patronymic).ToString(), "Index", new { sortOrder = @ViewBag.PatronymicSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })

        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.mail).ToString(), "Index", new { sortOrder = @ViewBag.MailSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })

        </th>
        <th style="max-width:8em; min-width:8em;">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.phoneNumber).ToString(), "Index", new { sortOrder = @ViewBag.PhoneNumberSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th class="hidden-xs hidden-sm" style="max-width:7em; min-width:7em;">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.dateOfBirth).ToString(), "Index", new { sortOrder = @ViewBag.DateOfBirthSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th class="hidden-xs" style="max-width:14em; min-width:9em;">
            @Html.DisplayNameFor(model => model.notes)
        </th>
        <th class="hidden-xs hidden-sm" style="min-width:7em;">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.startDate).ToString(), "Index", new { sortOrder = @ViewBag.StartDateSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th class="hidden-xs hidden-sm" style="min-width:7em;">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.endDate).ToString(), "Index", new { sortOrder = @ViewBag.EndDateSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th class="hidden-xs">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.forBeginners).ToString(), "Index", new { sortOrder = @ViewBag.isforBeginners, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NamelevelOfEnglish)
        </th>
        <th class="hidden-xs hidden-sm hidden-md" style="max-width:7em; min-width:7em;">
            @Html.ActionLink(@Html.DisplayNameFor(model => model.dateCreate).ToString(), "Index", new { sortOrder = @ViewBag.DateCreateSort, surnameS = @ViewBag.surnameS as string, nameS = @ViewBag.nameS as string, inStaff = @ViewBag.inStaff, levelName = @ViewBag.selLevel })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.name)
            </td>
            <td class="hidden-xs hidden-sm hidden-md">
                @Html.DisplayFor(modelItem => item.patronymic)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.mail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.phoneNumber)
            </td>
            <td class="hidden-xs hidden-sm" style="max-width:7em; min-width:7em;">
                @if (@item.dateOfBirth.HasValue)
                {
                    @item.dateOfBirth.Value.ToString("dd/MM/yyyy")
                }
            </td>
            <td class="hidden-xs" style="max-width:14em; min-width:9em;">
                @Html.DisplayFor(modelItem => item.notes)
            </td>
            <td class="hidden-xs hidden-sm" style="min-width:7em;">
                @item.startDate.ToString("dd/MM/yyyy")
            </td>
            <td class="hidden-xs hidden-sm" style="min-width:7em;">
                @if (@item.endDate.HasValue)
                {
                    @item.endDate.Value.ToString("dd/MM/yyyy")
                }
            </td>
            <td class="hidden-xs">
                @Html.DisplayFor(modelItem => item.forBeginners)
            </td>
            <td>
                @foreach (var Namelevel in item.NamelevelOfEnglish)
                {
                    @Html.DisplayFor(modelItem => Namelevel)<br />
                }
            </td>
            <td class="hidden-xs hidden-sm hidden-md" style="max-width:7em; min-width:7em;">
                @item.dateCreate.ToString("dd/MM/yyyy")
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })&nbsp;|
                @Html.ActionLink("Details", "Details", new { id = item.Id })&nbsp;|
                @if (User.IsInRole("supAdmin"))
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                }
            </td>
        </tr>
    }

</table>
