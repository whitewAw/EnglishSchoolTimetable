@model BroadwayEnglishSchoolTimetable.Models.timetableByDatePL

@{
    ViewBag.Title = "Редактирование расписания";
}

<h2>Редактирование расписания</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Дата занятия", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.beginTime, new { htmlAttributes = new { @class = "form-control", @Value = Model.beginTime.Value.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.beginTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.begin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.begin, new { htmlAttributes = new { @class = "form-control", id = "begin", onchange = "changeEvent()" } })
                @Html.ValidationMessageFor(model => model.begin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.end, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.end, new { htmlAttributes = new { @class = "form-control", id = "end", onchange = "changeEvent()" } })<span id="res"></span>
                @Html.ValidationMessageFor(model => model.end, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idClassRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idClassRoom, ViewBag.CRoomName as SelectList)
                @Html.ValidationMessageFor(model => model.idClassRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTeacher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.idTeacher, ViewBag.TeacName as SelectList)
                @Html.ValidationMessageFor(model => model.idTeacher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isCanceled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.isCanceled)
                    @Html.ValidationMessageFor(model => model.isCanceled, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.causeOfDisruption.Id, ViewBag.CauseofDistName as SelectList)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.passedMaterials, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passedMaterials, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passedMaterials, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.homework, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.homework, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.homework, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    <script>
    function changeEvent() {
        var start = new Date('1970-01-01T' + document.getElementById("begin").value + ":00" + 'Z');
        var end = new Date('1970-01-01T' + document.getElementById("end").value + ":00" + 'Z');
        var res = (end - start) / 60000;
        if(res>0)
            document.getElementById("res").innerHTML = res+" мин.";
        else
            document.getElementById("res").innerHTML = "";
    }
    </script>
}

